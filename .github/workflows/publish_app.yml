name: .NET Publish CLI App

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * 4'  # Release is made at 00:00 UTC every Thursday

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history so we can get all the tags

      - name: Determine new version tag
        id: tag_version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          major_version=$(echo $latest_tag | sed -e "s/v\([0-9]*\)\.\([0-9]*\).*/\1/")
          minor_version=$(echo $latest_tag | sed -e "s/v\([0-9]*\)\.\([0-9]*\).*/\2/")
          new_minor_version=$((minor_version + 1))
          new_tag="v${major_version}.${new_minor_version}.0"
          echo "New tag: $new_tag"
          echo "::set-output name=new_tag::$new_tag"

  ReleaseApp:
    needs: prepare_release
    strategy:
      matrix:
        kind: [ 'linux-x64', 'win-x64', 'osx-x64' ]
        include:
          - kind: linux-x64
            os: ubuntu-latest
            target: linux-x64
          - kind: win-x64
            os: windows-latest
            target: win-x64
          - kind: osx-x64
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build and publish Chirp CLI
        shell: bash
        run: |
          release_name="Chirp-${{ needs.prepare_release.outputs.new_tag }}-${{ matrix.target }}"
          dotnet publish src/Chirp.WebService/Chirp.WebService.csproj --framework net7.0 --runtime "${{ matrix.target }}" --self-contained false -c Release -o "$release_name"
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
          rm -r "$release_name"

      - name: Create and push new tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ needs.prepare_release.outputs.new_tag }}
          git push origin ${{ needs.prepare_release.outputs.new_tag }}

      - name: Publish Chirp CLI
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.prepare_release.outputs.new_tag }}
          files: |
            Chirp-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
